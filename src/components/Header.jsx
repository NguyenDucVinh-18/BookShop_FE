import React, { useState } from 'react';
import { Button, Input, Badge, Dropdown, Menu, Popconfirm } from 'antd';
import { SearchOutlined, PhoneOutlined, ShoppingCartOutlined, UserOutlined, MenuOutlined, CarOutlined, BookOutlined, HomeOutlined, ReadOutlined, GiftOutlined, FormOutlined, TrophyOutlined, BellOutlined, ExclamationCircleOutlined } from '@ant-design/icons';
import { useNavigate } from 'react-router-dom';
import '../styles/Header.css';

const Header = () => {
    const navigate = useNavigate();
    const [recentReload, setRecentReload] = useState(0);
    const [searchQuery, setSearchQuery] = useState('');

    const menuItems = [
        {
            icon: <HomeOutlined />,
            text: 'TRANG CH·ª¶',
            hasSubMenu: false
        },
        {
            icon: <BookOutlined />,
            text: 'H√à ƒê·ªåC - H√à KH√ÅC BI·ªÜT',
            hasSubMenu: false
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH M·∫¶M NON',
            hasSubMenu: true,
            subMenu: [
                'B√© V√†o L·ªõp 1',
                'T·ª´ ƒêi·ªÉn Tranh',
                'Th·ªß C√¥ng - T·∫≠p T√¥',
                'Ph√°t Tri·ªÉn Tr√≠ Tu·ªá'
            ]
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH THI·∫æU NHI',
            hasSubMenu: true,
            subMenu: [
                'Truy·ªán C·ªï T√≠ch',
                'S√°ch H·ªçc T·∫≠p',
                'S√°ch K·ªπ NƒÉng S·ªëng',
                'S√°ch Kh√°m Ph√°'
            ]
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH Kƒ® NƒÇNG',
            hasSubMenu: true,
            subMenu: [
                'K·ªπ NƒÉng Giao Ti·∫øp',
                'K·ªπ NƒÉng L√£nh ƒê·∫°o',
                'K·ªπ NƒÉng Qu·∫£n L√Ω',
                'K·ªπ NƒÉng M·ªÅm'
            ]
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH KINH DOANH',
            hasSubMenu: true,
            subMenu: [
                'Marketing',
                'Qu·∫£n Tr·ªã',
                'T√†i Ch√≠nh',
                'Kh·ªüi Nghi·ªáp'
            ]
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH M·∫∏ V√Ä B√â',
            hasSubMenu: true,
            subMenu: [
                'ChƒÉm S√≥c Thai K·ª≥',
                'Nu√¥i D·∫°y Con',
                'Dinh D∆∞·ª°ng',
                'S·ª©c Kh·ªèe'
            ]
        },
        {
            icon: <BookOutlined />,
            text: 'S√ÅCH VƒÇN H·ªåC',
            hasSubMenu: true,
            subMenu: [
                'Ti·ªÉu Thuy·∫øt',
                'Truy·ªán Ng·∫Øn',
                'Th∆° Ca',
                'VƒÉn H·ªçc N∆∞·ªõc Ngo√†i'
            ]
        },
        {
            icon: <ReadOutlined />,
            text: 'S√ÅCH THAM KH·∫¢O',
            hasSubMenu: true,
            subMenu: [
                'S√°ch Gi√°o Khoa',
                'S√°ch B√†i T·∫≠p',
                'S√°ch Tham Kh·∫£o',
                'T√†i Li·ªáu H·ªçc T·∫≠p'
            ]
        },
        {
            icon: <GiftOutlined />,
            text: 'ƒê·ªí CH∆†I TR·∫∫ EM - VPP',
            hasSubMenu: true,
            subMenu: [
                'ƒê·ªì Ch∆°i Gi√°o D·ª•c',
                'ƒê·ªì Ch∆°i S√°ng T·∫°o',
                'VƒÉn Ph√≤ng Ph·∫©m',
                'D·ª•ng C·ª• H·ªçc T·∫≠p'
            ]
        },
        {
            icon: <FormOutlined />,
            text: 'NOTEBOOK',
            hasSubMenu: true,
            subMenu: [
                'S·ªï Tay',
                'S·ªï Ghi Ch√©p',
                'S·ªï K·∫ø Ho·∫°ch',
                'S·ªï T·ª± Do'
            ]
        },
        {
            icon: <TrophyOutlined />,
            text: 'TOP BEST SELLER',
            hasSubMenu: false
        },
        {
            icon: <BellOutlined />,
            text: 'TIN T·ª®C/BLOG',
            hasSubMenu: true,
            subMenu: [
                'Tin T·ª©c S√°ch',
                'B√†i Vi·∫øt Hay',
                'Review S√°ch',
                'G√≥c Chia S·∫ª'
            ]
        },
        {
            icon: <ExclamationCircleOutlined />,
            text: 'S√ÅCH M·ªöI',
            hasSubMenu: false
        },
        {
            icon: <ExclamationCircleOutlined />,
            text: 'S√ÅCH S·∫ÆP PH√ÅT H√ÄNH',
            hasSubMenu: false
        }
    ];

    // Create Ant Design menu items
    const createMenuItems = () => {
        return menuItems.map((item, index) => {
            if (item.hasSubMenu) {
                return {
                    key: index,
                    icon: item.icon,
                    label: item.text,
                    children: item.subMenu.map((subItem, subIndex) => ({
                        key: `${index}-${subIndex}`,
                        label: subItem
                    }))
                };
            } else {
                return {
                    key: index,
                    icon: item.icon,
                    label: item.text
                };
            }
        });
    };

    // Search function
    const handleSearch = () => {
        if (searchQuery.trim()) {
            // Navigate to search results page with query
            navigate(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
            setSearchQuery(''); // Clear search input after search
        }
    };

    // Handle Enter key press
    const handleKeyPress = (e) => {
        if (e.key === 'Enter') {
            handleSearch();
        }
    };

    return (
        <>
            {/* Top Bar - Dark Purple */}
            <div className="top-bar">
                <div className="container">
                    {/* Top bar content if needed */}
                </div>
            </div>

            {/* Main Header - White */}
            <header className="main-header">
                <div className="container">
                    <div className="header-content">
                        {/* Logo */}
                        <div className="logo" onClick={() => navigate('/')} style={{ cursor: 'pointer' }}>
                            <div className="logo-icon">üìö</div>
                            <div className="logo-text">
                                <div className="logo-title">MINHLONGbook</div>
                                <div className="logo-subtitle">∆Ø∆°m m·∫ßm tri th·ª©c</div>
                            </div>
                        </div>

                        {/* Search Bar */}
                        <div className="search-section">
                            <div className="search-container">
                                <Input
                                    placeholder="T√¨m ki·∫øm..."
                                    className="search-input"
                                    value={searchQuery}
                                    onChange={(e) => setSearchQuery(e.target.value)}
                                    onKeyPress={handleKeyPress}
                                />
                                <Button
                                    type="primary"
                                    className="search-button"
                                    onClick={handleSearch}
                                    disabled={!searchQuery.trim()}
                                >
                                    <SearchOutlined />
                                    T√¨m ki·∫øm
                                </Button>
                            </div>
                        </div>

                        {/* User Icons */}
                        <div className="user-icons">
                            <div className="icon-item">
                                <PhoneOutlined className="icon" />
                                <span>Tra c·ª©u ƒë∆°n h√†ng</span>
                            </div>
                            <div className="icon-item">
                                <Badge count={0} className="cart-badge">
                                    <ShoppingCartOutlined className="icon" />
                                </Badge>
                                <span>Gi·ªè h√†ng</span>
                            </div>
                            <div className="icon-item">
                                <Dropdown
                                    menu={{
                                        items: [
                                            {
                                                key: 'login',
                                                icon: <FormOutlined />,
                                                label: 'ƒêƒÉng nh·∫≠p',
                                                onClick: () => navigate('/login')
                                            },
                                            {
                                                key: 'register',
                                                icon: <UserOutlined />,
                                                label: 'ƒêƒÉng k√Ω',
                                                onClick: () => navigate('/register')
                                            }
                                        ]
                                    }}
                                    trigger={['click']}
                                    placement="bottomRight"
                                    overlayStyle={{ zIndex: 1000 }}
                                >
                                    <div className="icon-item">
                                        <UserOutlined className="icon" />
                                        <span>T√†i kho·∫£n</span>
                                    </div>
                                </Dropdown>
                            </div>
                        </div>
                    </div>
                </div>
            </header>

            {/* Navigation Bar - Light Gray */}
            <div className="navigation-bar">
                <div className="container">
                    <div className="nav-content">
                        {/* Menu with Dropdown */}
                        <div className="menu-section">
                            <Dropdown
                                menu={{ items: createMenuItems() }}
                                trigger={['hover']}
                                placement="bottomLeft"
                                overlayStyle={{ zIndex: 1000 }}
                            >
                                <div className="menu-trigger">
                                    <MenuOutlined className="menu-icon" />
                                    <span>DANH M·ª§C S√ÅCH</span>
                                </div>
                            </Dropdown>
                        </div>

                        {/* Info Links */}
                        <div className="info-links">
                            <Dropdown
                                trigger={["hover"]}
                                placement="bottom"
                                dropdownRender={() => {
                                    let items = [];
                                    try {
                                        const raw = localStorage.getItem('recentlyViewed');
                                        items = raw ? JSON.parse(raw) : [];
                                    } catch { }
                                    return (
                                        <div className="recent-dropdown">
                                            <div className="recent-actions-top">
                                                <Button size="small" type="link" onClick={() => navigate('/recently-viewed')}>Xem t·∫•t c·∫£</Button>
                                                {items && items.length > 0 && (
                                                    <Popconfirm
                                                        title="X√≥a t·∫•t c·∫£ s·∫£n ph·∫©m ƒë√£ xem?"
                                                        okText="X√≥a"
                                                        cancelText="H·ªßy"
                                                        okButtonProps={{ danger: true }}
                                                        placement="bottomRight"
                                                        onConfirm={() => {
                                                            localStorage.removeItem('recentlyViewed');
                                                            setRecentReload((v) => v + 1);
                                                            // Emit custom event to notify other components
                                                            window.dispatchEvent(new Event('localStorageCleared'));
                                                        }}
                                                    >
                                                        <Button size="small" type="link" danger>X√≥a t·∫•t c·∫£</Button>
                                                    </Popconfirm>
                                                )}
                                            </div>
                                            <div className="recent-grid">
                                                {(!items || items.length === 0) && (
                                                    <div className="recent-empty">Ch∆∞a c√≥ s·∫£n ph·∫©m ƒë√£ xem</div>
                                                )}
                                                {items && items.slice(0, 5).map((p) => (
                                                    <div key={p.id} className="recent-card" onClick={() => navigate(`/product/${p.id}`)}>
                                                        <div className="recent-image"><img src={p.image} alt={p.title} /></div>
                                                        <div className="recent-title">{p.title}</div>
                                                        <div className="recent-price">{new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(p.price)}</div>
                                                    </div>
                                                ))}
                                            </div>
                                        </div>
                                    );
                                }}
                            >
                                <span className="info-link" style={{ cursor: 'pointer' }}>S·∫£n ph·∫©m ƒë√£ xem</span>
                            </Dropdown>
                            <div className="info-item">
                                <CarOutlined className="info-icon" />
                                <span>Ship COD Tr√™n To√†n Qu·ªëc</span>
                            </div>
                            <div className="info-item">
                                <CarOutlined className="info-icon" />
                                <span>Free Ship ƒê∆°n H√†ng Tr√™n 300k</span>
                            </div>
                        </div>

                        {/* Contact */}
                        <div className="contact-info">
                            <PhoneOutlined className="contact-icon" />
                            <span>0966160925 / 0989 849 396</span>
                        </div>
                    </div>
                </div>
            </div>
        </>
    );
};

export default Header;
